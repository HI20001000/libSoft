{"remainingRequest":"C:\\Users\\maxch\\Desktop\\Bookmanager-master\\project\\Bookmanager-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\maxch\\Desktop\\Bookmanager-master\\project\\Bookmanager-master\\src\\layout\\components\\Sidebar\\Item.vue?vue&type=style&index=0&id=31ea41b3&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\maxch\\Desktop\\Bookmanager-master\\project\\Bookmanager-master\\src\\layout\\components\\Sidebar\\Item.vue","mtime":1700232500000},{"path":"C:\\Users\\maxch\\Desktop\\Bookmanager-master\\project\\Bookmanager-master\\node_modules\\css-loader\\dist\\cjs.js","mtime":1700232500000},{"path":"C:\\Users\\maxch\\Desktop\\Bookmanager-master\\project\\Bookmanager-master\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1700232500000},{"path":"C:\\Users\\maxch\\Desktop\\Bookmanager-master\\project\\Bookmanager-master\\node_modules\\postcss-loader\\src\\index.js","mtime":1700232500000},{"path":"C:\\Users\\maxch\\Desktop\\Bookmanager-master\\project\\Bookmanager-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1700232500000},{"path":"C:\\Users\\maxch\\Desktop\\Bookmanager-master\\project\\Bookmanager-master\\node_modules\\vue-loader\\lib\\index.js","mtime":1700232500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5zdWItZWwtaWNvbiwuaWNvbmZvbnQgewogIGNvbG9yOiBjdXJyZW50Q29sb3I7CiAgd2lkdGg6IDFlbTsKICBoZWlnaHQ6IDFlbTsKICBmb250LXNpemU6IDI0cHg7CiAgbWFyZ2luLXJpZ2h0OiAxMHB4Owp9Cg=="},{"version":3,"sources":["Item.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Item.vue","sourceRoot":"src/layout/components/Sidebar","sourcesContent":["<!--\n * @Description: \n * @Author: Rabbiter\n * @Date: 2023-02-21 18:13:21\n-->\n<script>\nexport default {\n  name: 'MenuItem',\n  functional: true,\n  props: {\n    icon: {\n      type: String,\n      default: ''\n    },\n    title: {\n      type: String,\n      default: ''\n    }\n  },\n  render(h, context) {\n    const { icon, title } = context.props\n    const vnodes = []\n\n    if (icon) {\n      if (icon.includes('el-icon')) {\n        vnodes.push(<i class={[icon, 'sub-el-icon']}  style='font-size:24px;' />)\n      } else if(icon.includes('icon-r')) {\n        \n        vnodes.push(<i class={['iconfont', icon]} style='font-size:24px;' />)\n      } else {\n        vnodes.push(<svg-icon icon-class={icon}/>)\n      }\n    }\n\n    if (title) {\n      vnodes.push(<span slot='title'> {(title)}</span>)\n    }\n    return vnodes\n  }\n}\n</script>\n\n<style scoped>\n.sub-el-icon,.iconfont {\n  color: currentColor;\n  width: 1em;\n  height: 1em;\n  font-size: 24px;\n  margin-right: 10px;\n}\n</style>\n"]}]}